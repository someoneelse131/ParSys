version: '3.8'

services:
  rabbitmq:
    container_name: rbq
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: stockmarket
      RABBITMQ_DEFAULT_PASS: supersecret123
    ports:
      - "5672:5672"
      - "15672:15672"

  stock-publisher:
    container_name: producer
    build: ./producer
    environment:
      - RABBITMQ_URL=amqp://stockmarket:supersecret123@rabbitmq:5672/
      - TICKER_INTERVAL=1
    depends_on:
      - rabbitmq

  consumer:
    container_name: consumer
    build: ./consumer
    environment:
      - RABBITMQ_URL=amqp://stockmarket:supersecret123@rabbitmq:5672/
      - MONGODB_URL=mongodb://mongodb1:27017,mongodb2:27018,mongodb3:27019/?replicaSet=rs0
    depends_on:
      - rabbitmq
      - mongodb1
      - mongodb2
      - mongodb3

  mongodb1:
    image: mongo:7.0
    container_name: db1
    restart: always
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 27017:27017
    volumes:
      - "mongodb1_data:/data/db"
      - "mongodb1_config:/data/configdb"

  mongodb2:
    image: mongo:7.0
    container_name: db2
    restart: always
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27018" ]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 27018:27018
    volumes:
      - "mongodb2_data:/data/db"
      - "mongodb2_config:/data/configdb"

  mongodb3:
    image: mongo:7.0
    container_name: db3
    restart: always
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27019" ]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 27019:27019
    volumes:
      - "mongodb3_data:/data/db"
      - "mongodb3_config:/data/configdb"

  frontend1:
    container_name: fe1
    build: ./frontend
    environment:
      - MONGODB_URL=mongodb://mongodb1:27017,mongodb2:27018,mongodb3:27019/?replicaSet=rs0
    ports:
      - "3000:3000"
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend2:
    container_name: fe2
    build: ./frontend
    environment:
      - MONGODB_URL=mongodb://mongodb1:27017,mongodb2:27018,mongodb3:27019/?replicaSet=rs0
    ports:
      - "3001:3000"
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    container_name: lb
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend1
      - frontend2

volumes:
  mongodb1_data:
  mongodb1_config:
  mongodb2_data:
  mongodb2_config:
  mongodb3_data:
  mongodb3_config:
